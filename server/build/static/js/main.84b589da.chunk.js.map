{"version":3,"sources":["TextEditor.js","App.js","index.js"],"names":["TOOLBAR_OPTIONS","header","font","list","color","background","script","align","recognition","window","SpeechRecognition","webkitSpeechRecognition","TextEditor","documentId","useParams","id","useState","socket","setSocket","quill","setQuill","textindex","setTextindex","isListening","setIsListening","selectedLanguage","setSelectedLanguage","socketStatus","setSocketStatus","useEffect","s","io","on","disconnect","once","document","setContents","enable","emit","interval","setInterval","getContents","clearInterval","handler","delta","updateContents","off","oldDelta","source","range","oldRange","console","log","length","index","text","getText","wrapperRef","useCallback","wrapper","innerHTML","editor","createElement","append","q","Quill","theme","modules","toolbar","disable","setText","onresult","event","speechToText","results","transcript","insertTextAtLastIndex","onend","start","onerror","error","lang","lastIndex","getLength","getLastIndex","retain","insert","className","onClick","disabled","stop","htmlFor","value","onChange","target","ref","App","path","exact","to","uuidV4","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84b589da.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport Quill from \"quill\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SAVE_INTERVAL_MS = 2000;\r\nconst TOOLBAR_OPTIONS = [\r\n  [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n  [{ font: [] }],\r\n  [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n  [\"bold\", \"italic\", \"underline\"],\r\n  [{ color: [] }, { background: [] }],\r\n  [{ script: \"sub\" }, { script: \"super\" }],\r\n  [{ align: [] }],\r\n  [\"image\", \"blockquote\", \"code-block\"],\r\n  [\"clean\"],\r\n];\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\n\r\nexport default function TextEditor() {\r\n  const { id: documentId } = useParams();\r\n  const [socket, setSocket] = useState();\r\n  const [quill, setQuill] = useState();\r\n  const [textindex, setTextindex] = useState();\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"en-US\");\r\n  const [socketStatus, setSocketStatus] = useState(\"Connecting...\");\r\n  useEffect(() => {\r\n    const s = io(\"http://localhost:3001\");\r\n    s.on(\"connect\", () => {\r\n      setSocketStatus(\"Connected\");\r\n    });\r\n\r\n    s.on(\"disconnect\", () => {\r\n      setSocketStatus(\"Disconnected\");\r\n    });\r\n\r\n  \r\n    setSocket(s);\r\n\r\n    return () => {\r\n      s.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket == null || quill == null) return;\r\n\r\n    socket.once(\"load-document\", (document) => {\r\n      quill.setContents(document);\r\n      quill.enable();\r\n    });\r\n\r\n    socket.emit(\"get-document\", documentId);\r\n  }, [socket, quill, documentId]);\r\n\r\n  useEffect(() => {\r\n    if (socket == null || quill == null) return;\r\n\r\n    const interval = setInterval(() => {\r\n      socket.emit(\"save-document\", quill.getContents());\r\n    }, SAVE_INTERVAL_MS);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [socket, quill]);\r\n\r\n  useEffect(() => {\r\n    if (socket == null || quill == null) return;\r\n\r\n    const handler = (delta) => {\r\n      quill.updateContents(delta);\r\n    };\r\n    socket.on(\"receive-changes\", handler);\r\n\r\n    return () => {\r\n      socket.off(\"receive-changes\", handler);\r\n    };\r\n  }, [socket, quill]);\r\n\r\n  useEffect(() => {\r\n    if (socket == null || quill == null) return;\r\n\r\n    const handler = (delta, oldDelta, source) => {\r\n      if (source !== \"user\") return;\r\n      socket.emit(\"send-changes\", delta);\r\n    };\r\n\r\n    quill.on(\"text-change\", handler);\r\n    quill.on('selection-change', function(range, oldRange, source) {\r\n      if (range) {\r\n        console.log(range,\"selection\")\r\n        if (range.length == 0) {\r\n          console.log('User cursor is on', range?.index);\r\n          setTextindex(range?.index)\r\n        } else {\r\n          var text = quill.getText(range.index, range.length);\r\n          console.log('User has highlighted', text ? text : \"blank\");\r\n        }\r\n      } else {\r\n        console.log('Cursor not in the editor');\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      quill.off(\"text-change\", handler);\r\n    };\r\n  }, [socket, quill]);\r\n\r\n  const wrapperRef = useCallback((wrapper) => {\r\n    if (wrapper == null) return;\r\n\r\n    wrapper.innerHTML = \"\";\r\n    const editor = document.createElement(\"div\");\r\n    wrapper.append(editor);\r\n    const q = new Quill(editor, {\r\n      theme: \"snow\",\r\n      modules: { toolbar: TOOLBAR_OPTIONS },\r\n    });\r\n    q.disable();\r\n    q.setText(\"Loading...\");\r\n    setQuill(q);\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    recognition.onresult = (event) => {\r\n      const speechToText = event.results[0][0].transcript;\r\n      console.log(\"Speech to text:\", speechToText.length);\r\n      \r\n      insertTextAtLastIndex(speechToText+\"\\n\");\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      if (isListening) {\r\n        recognition.start();\r\n      }\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech recognition error:\", event.error);\r\n      setIsListening(false);\r\n    };\r\n    recognition.lang = selectedLanguage;\r\n  }, [quill,isListening,selectedLanguage]);\r\n\r\n  const startListening = () => {\r\n    recognition.lang = selectedLanguage;\r\n    setIsListening(true);\r\n    recognition.start();\r\n  };\r\n  const stopListening = () => {\r\n    setIsListening(false);\r\n    recognition.stop();\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const insertTextAtIndex = (index, text) => {\r\n    if (index) {\r\n    const delta = [{ retain: index }, { insert: text }];\r\n    quill.updateContents(delta);\r\n    socket.emit(\"send-changes\", delta);\r\n    }\r\n    else insertTextAtLastIndex(text)\r\n  };\r\n  const getLastIndex = () => {\r\n    const quillEditor = quill?.editor;\r\n    if (quillEditor) {\r\n      const length = quill.getLength();\r\n      return length > 0 ? length - 1 : 0;\r\n    }\r\n    return 0;\r\n  };\r\n  const getIndex = () => {\r\n    const quillEditor = quill?.editor;\r\n    if (quillEditor) {\r\n      const length = quill.getLength();\r\n      return length > 0 ? length - 1 : 0;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const insertTextAtLastIndex = (text) => {\r\n    const lastIndex = getLastIndex();\r\n   \r\n\r\n    const delta = [{ retain: textindex?textindex:lastIndex }, { insert: text }];\r\n    quill.updateContents(delta);\r\n    setTextindex(textindex+text.length)\r\n    socket.emit(\"send-changes\", delta);\r\n  };\r\n  const handleLanguageChange = (event) => {\r\n    setSelectedLanguage(event.target.value);\r\n  };\r\n  return (\r\n    <> \r\n       <div className=\"micro-container\">\r\n       <h3 className=\"status-div\"> {socketStatus}<div className=\"blink_me\"></div></h3>\r\n          {/* <button onClick={() => insertTextAtIndex(textindex, `Inserted text at index ${textindex}`)}>\r\n            Insert Text at Index\r\n          </button>\r\n          <button onClick={() => insertTextAtLastIndex(\"Inserted text at last index\")}>\r\n            Insert Text at Last Index\r\n          </button> */}\r\n          <button className=\"btn green\" onClick={startListening} disabled={isListening}>\r\n            {isListening ? \"Listening...\" : \"Start Dictation\"}\r\n          </button>\r\n          \r\n          <button className=\"btn red\" onClick={stopListening} disabled={!isListening}>\r\n            Stop Dictation\r\n          </button>\r\n          <div>\r\n          <label htmlFor=\"languageDropdown\">Select Language:</label>\r\n          <select id=\"languageDropdown\" value={selectedLanguage} onChange={handleLanguageChange}>\r\n            <option value=\"en-US\">English (US)</option>\r\n            <option value=\"es-ES\">Spanish (Spain)</option>\r\n            <option value=\"te-IN\">Telugu</option>\r\n            {/* Add more language options as needed */}\r\n          </select>\r\n          </div>\r\n        \r\n        </div>\r\n      <div className=\"container-main \">\r\n      \r\n        <div className=\"container\" ref={wrapperRef}></div>\r\n     \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import TextEditor from \"./TextEditor\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\"\r\nimport { v4 as uuidV4 } from \"uuid\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/home\" exact>\r\n          <Redirect to={`/documents/${uuidV4()}`} />\r\n        </Route>\r\n        <Route path=\"/documents/:id\">\r\n          <TextEditor />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport \"./styles.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}